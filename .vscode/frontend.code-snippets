{
  "SnippetTemplate": {
    "prefix": ["snippet"],
    "body": [
      " \"StrapiFindMany\": {",
      "\"prefix\": [\"findMany\"],",
      "\"body\": [",
      "\"const ${1:entity} = await strapi.db.query(\"api::entity.entity\").findMany();\"",
      "],",
      "\"description\": \"FindMany\"",
      "},"
    ],
    "description": "Create Snippet"
  },
  "For Loop": {
    "prefix": ["Template", "for-const"],
    "body": ["for (const ${2:element} of ${1:array}) {", "\t$0", "}"],
    "description": "A for loop."
  },
  "GraphQl Data": {
    "prefix": ["gql"],
    "body": [
      "const { data, loading, error } = useQuery(GET_REALMS);",
      "const gql_data = data && normalize(data);"
    ],
    "description": "Gql data boilerplate"
  },
  "Import GQL": {
    "prefix": ["igql"],
    "body": [
      "import { useQuery } from \"@apollo/react-hooks\";",
      "import { ${1:GQL_QUERY} } from \"../GQL/query\";",
      "import { normalize } from \"../utils/calculations\";"
    ],
    "description": "Import Gql boilerplate"
  },
  "Component": {
    "prefix": ["comp"],
    "body": [
      "const ${1:Component} = ({${2:props}}) => { return ( <div className={styles.${3:classname}}>$0</div>) }"
    ],
    "description": "Functional Component"
  },
  "Button": {
    "prefix": ["btn"],
    "body": [
      "<Button type={\"primary\"} onClick={() => {}} children={\"Start\"} isLoading={store.isLoading} />"
    ],
    "description": "Button Component"
  },
  "Image": {
    "prefix": ["img"],
    "body": [
      "<ImageUI url={action.image?.url} width=\"75px\" height=\"75px\" />"
    ],
    "description": "Image Component"
  },
  "Link": {
    "prefix": ["link"],
    "body": [
      "<Link href={{ pathname: \"/card/[id]\", query: { id: isCollected ? card.card.id : card.id  }}}></Link>"
    ],
    "description": "Link Next"
  }
}
